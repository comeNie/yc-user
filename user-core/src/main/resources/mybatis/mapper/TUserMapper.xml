<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.cy.user.dao.mapper.interfaces.TUserMapper" >
  <resultMap id="BaseResultMap" type="com.ai.yc.user.dao.mapper.bo.TUser" >
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="lastname" property="lastname" jdbcType="VARCHAR" />
    <result column="firstname" property="firstname" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="years_work" property="yearsWork" jdbcType="INTEGER" />
    <result column="native_lang" property="nativeLang" jdbcType="VARCHAR" />
    <result column="TELEPHONE" property="telephone" jdbcType="VARCHAR" />
    <result column="MOBILE_PHONE" property="mobilePhone" jdbcType="VARCHAR" />
    <result column="ADDRESS" property="address" jdbcType="VARCHAR" />
    <result column="CITY" property="city" jdbcType="VARCHAR" />
    <result column="CN_CITY" property="cnCity" jdbcType="VARCHAR" />
    <result column="PROVINCE" property="province" jdbcType="VARCHAR" />
    <result column="COUNTRY" property="country" jdbcType="VARCHAR" />
    <result column="TIME_ZONE" property="timeZone" jdbcType="VARCHAR" />
    <result column="IS_RANSLATOR" property="isRanslator" jdbcType="INTEGER" />
    <result column="IS_LSP" property="isLsp" jdbcType="INTEGER" />
    <result column="LSP_ID" property="lspId" jdbcType="BIGINT" />
    <result column="INTRODUCTION" property="introduction" jdbcType="VARCHAR" />
    <result column="REGIST_TIME" property="registTime" jdbcType="TIMESTAMP" />
    <result column="LAST_MODIFY_TIME" property="lastModifyTime" jdbcType="TIMESTAMP" />
    <result column="OCCUPATION" property="occupation" jdbcType="INTEGER" />
    <result column="TITLE" property="title" jdbcType="INTEGER" />
    <result column="USERSOURCE" property="usersource" jdbcType="VARCHAR" />
    <result column="THIRDUID" property="thirduid" jdbcType="VARCHAR" />
    <result column="PERSONSIGN" property="personsign" jdbcType="VARCHAR" />
    <result column="IS_BUSINESS" property="isBusiness" jdbcType="INTEGER" />
    <result column="CUST_ID" property="custId" jdbcType="VARCHAR" />
    <result column="EMAIL_VALIDATE_FLAG" property="emailValidateFlag" jdbcType="VARCHAR" />
    <result column="vip_level" property="vipLevel" jdbcType="VARCHAR" />
    <result column="SAFETY_LEVEL" property="safetyLevel" jdbcType="VARCHAR" />
    <result column="LEGAL_CERT_NUM" property="legalCertNum" jdbcType="VARCHAR" />
    <result column="interpreter_language" property="interpreterLanguage" jdbcType="VARCHAR" />
    <result column="translation_type" property="translationType" jdbcType="VARCHAR" />
    <result column="reference_price" property="referencePrice" jdbcType="VARCHAR" />
    <result column="LSP_ROLE" property="lspRole" jdbcType="VARCHAR" />
    <result column="IS_ADMIN" property="isAdmin" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ai.yc.user.dao.mapper.bo.TUserWithBLOBs" extends="BaseResultMap" >
    <result column="good_area" property="goodArea" jdbcType="LONGVARCHAR" />
    <result column="good_use" property="goodUse" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, nickname, state, lastname, firstname, sex, birthday, years_work, native_lang, 
    TELEPHONE, MOBILE_PHONE, ADDRESS, CITY, CN_CITY, PROVINCE, COUNTRY, TIME_ZONE, IS_RANSLATOR, 
    IS_LSP, LSP_ID, INTRODUCTION, REGIST_TIME, LAST_MODIFY_TIME, OCCUPATION, TITLE, USERSOURCE, 
    THIRDUID, PERSONSIGN, IS_BUSINESS, CUST_ID, EMAIL_VALIDATE_FLAG, vip_level, SAFETY_LEVEL, 
    LEGAL_CERT_NUM, interpreter_language, translation_type, reference_price, LSP_ROLE, 
    IS_ADMIN
  </sql>
  <sql id="Blob_Column_List" >
    good_area, good_use
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.ai.yc.user.dao.mapper.bo.TUserCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.yc.user.dao.mapper.bo.TUserCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.ai.yc.user.dao.mapper.bo.TUserCriteria" >
    delete from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.yc.user.dao.mapper.bo.TUserWithBLOBs" >
    insert into t_user (user_id, nickname, state, 
      lastname, firstname, sex, 
      birthday, years_work, native_lang, 
      TELEPHONE, MOBILE_PHONE, ADDRESS, 
      CITY, CN_CITY, PROVINCE, 
      COUNTRY, TIME_ZONE, IS_RANSLATOR, 
      IS_LSP, LSP_ID, INTRODUCTION, 
      REGIST_TIME, LAST_MODIFY_TIME, OCCUPATION, 
      TITLE, USERSOURCE, THIRDUID, 
      PERSONSIGN, IS_BUSINESS, CUST_ID, 
      EMAIL_VALIDATE_FLAG, vip_level, SAFETY_LEVEL, 
      LEGAL_CERT_NUM, interpreter_language, translation_type, 
      reference_price, LSP_ROLE, IS_ADMIN, 
      good_area, good_use)
    values (#{userId,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{lastname,jdbcType=VARCHAR}, #{firstname,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{birthday,jdbcType=VARCHAR}, #{yearsWork,jdbcType=INTEGER}, #{nativeLang,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{mobilePhone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{cnCity,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, 
      #{country,jdbcType=VARCHAR}, #{timeZone,jdbcType=VARCHAR}, #{isRanslator,jdbcType=INTEGER}, 
      #{isLsp,jdbcType=INTEGER}, #{lspId,jdbcType=BIGINT}, #{introduction,jdbcType=VARCHAR}, 
      #{registTime,jdbcType=TIMESTAMP}, #{lastModifyTime,jdbcType=TIMESTAMP}, #{occupation,jdbcType=INTEGER}, 
      #{title,jdbcType=INTEGER}, #{usersource,jdbcType=VARCHAR}, #{thirduid,jdbcType=VARCHAR}, 
      #{personsign,jdbcType=VARCHAR}, #{isBusiness,jdbcType=INTEGER}, #{custId,jdbcType=VARCHAR}, 
      #{emailValidateFlag,jdbcType=VARCHAR}, #{vipLevel,jdbcType=VARCHAR}, #{safetyLevel,jdbcType=VARCHAR}, 
      #{legalCertNum,jdbcType=VARCHAR}, #{interpreterLanguage,jdbcType=VARCHAR}, #{translationType,jdbcType=VARCHAR}, 
      #{referencePrice,jdbcType=VARCHAR}, #{lspRole,jdbcType=VARCHAR}, #{isAdmin,jdbcType=INTEGER}, 
      #{goodArea,jdbcType=LONGVARCHAR}, #{goodUse,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.yc.user.dao.mapper.bo.TUserWithBLOBs" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="lastname != null" >
        lastname,
      </if>
      <if test="firstname != null" >
        firstname,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="yearsWork != null" >
        years_work,
      </if>
      <if test="nativeLang != null" >
        native_lang,
      </if>
      <if test="telephone != null" >
        TELEPHONE,
      </if>
      <if test="mobilePhone != null" >
        MOBILE_PHONE,
      </if>
      <if test="address != null" >
        ADDRESS,
      </if>
      <if test="city != null" >
        CITY,
      </if>
      <if test="cnCity != null" >
        CN_CITY,
      </if>
      <if test="province != null" >
        PROVINCE,
      </if>
      <if test="country != null" >
        COUNTRY,
      </if>
      <if test="timeZone != null" >
        TIME_ZONE,
      </if>
      <if test="isRanslator != null" >
        IS_RANSLATOR,
      </if>
      <if test="isLsp != null" >
        IS_LSP,
      </if>
      <if test="lspId != null" >
        LSP_ID,
      </if>
      <if test="introduction != null" >
        INTRODUCTION,
      </if>
      <if test="registTime != null" >
        REGIST_TIME,
      </if>
      <if test="lastModifyTime != null" >
        LAST_MODIFY_TIME,
      </if>
      <if test="occupation != null" >
        OCCUPATION,
      </if>
      <if test="title != null" >
        TITLE,
      </if>
      <if test="usersource != null" >
        USERSOURCE,
      </if>
      <if test="thirduid != null" >
        THIRDUID,
      </if>
      <if test="personsign != null" >
        PERSONSIGN,
      </if>
      <if test="isBusiness != null" >
        IS_BUSINESS,
      </if>
      <if test="custId != null" >
        CUST_ID,
      </if>
      <if test="emailValidateFlag != null" >
        EMAIL_VALIDATE_FLAG,
      </if>
      <if test="vipLevel != null" >
        vip_level,
      </if>
      <if test="safetyLevel != null" >
        SAFETY_LEVEL,
      </if>
      <if test="legalCertNum != null" >
        LEGAL_CERT_NUM,
      </if>
      <if test="interpreterLanguage != null" >
        interpreter_language,
      </if>
      <if test="translationType != null" >
        translation_type,
      </if>
      <if test="referencePrice != null" >
        reference_price,
      </if>
      <if test="lspRole != null" >
        LSP_ROLE,
      </if>
      <if test="isAdmin != null" >
        IS_ADMIN,
      </if>
      <if test="goodArea != null" >
        good_area,
      </if>
      <if test="goodUse != null" >
        good_use,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="lastname != null" >
        #{lastname,jdbcType=VARCHAR},
      </if>
      <if test="firstname != null" >
        #{firstname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="yearsWork != null" >
        #{yearsWork,jdbcType=INTEGER},
      </if>
      <if test="nativeLang != null" >
        #{nativeLang,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null" >
        #{mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="cnCity != null" >
        #{cnCity,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="timeZone != null" >
        #{timeZone,jdbcType=VARCHAR},
      </if>
      <if test="isRanslator != null" >
        #{isRanslator,jdbcType=INTEGER},
      </if>
      <if test="isLsp != null" >
        #{isLsp,jdbcType=INTEGER},
      </if>
      <if test="lspId != null" >
        #{lspId,jdbcType=BIGINT},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="registTime != null" >
        #{registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null" >
        #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="occupation != null" >
        #{occupation,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=INTEGER},
      </if>
      <if test="usersource != null" >
        #{usersource,jdbcType=VARCHAR},
      </if>
      <if test="thirduid != null" >
        #{thirduid,jdbcType=VARCHAR},
      </if>
      <if test="personsign != null" >
        #{personsign,jdbcType=VARCHAR},
      </if>
      <if test="isBusiness != null" >
        #{isBusiness,jdbcType=INTEGER},
      </if>
      <if test="custId != null" >
        #{custId,jdbcType=VARCHAR},
      </if>
      <if test="emailValidateFlag != null" >
        #{emailValidateFlag,jdbcType=VARCHAR},
      </if>
      <if test="vipLevel != null" >
        #{vipLevel,jdbcType=VARCHAR},
      </if>
      <if test="safetyLevel != null" >
        #{safetyLevel,jdbcType=VARCHAR},
      </if>
      <if test="legalCertNum != null" >
        #{legalCertNum,jdbcType=VARCHAR},
      </if>
      <if test="interpreterLanguage != null" >
        #{interpreterLanguage,jdbcType=VARCHAR},
      </if>
      <if test="translationType != null" >
        #{translationType,jdbcType=VARCHAR},
      </if>
      <if test="referencePrice != null" >
        #{referencePrice,jdbcType=VARCHAR},
      </if>
      <if test="lspRole != null" >
        #{lspRole,jdbcType=VARCHAR},
      </if>
      <if test="isAdmin != null" >
        #{isAdmin,jdbcType=INTEGER},
      </if>
      <if test="goodArea != null" >
        #{goodArea,jdbcType=LONGVARCHAR},
      </if>
      <if test="goodUse != null" >
        #{goodUse,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.yc.user.dao.mapper.bo.TUserCriteria" resultType="java.lang.Integer" >
    select count(*) from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_user
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.lastname != null" >
        lastname = #{record.lastname,jdbcType=VARCHAR},
      </if>
      <if test="record.firstname != null" >
        firstname = #{record.firstname,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.yearsWork != null" >
        years_work = #{record.yearsWork,jdbcType=INTEGER},
      </if>
      <if test="record.nativeLang != null" >
        native_lang = #{record.nativeLang,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null" >
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.mobilePhone != null" >
        MOBILE_PHONE = #{record.mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null" >
        CITY = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.cnCity != null" >
        CN_CITY = #{record.cnCity,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null" >
        PROVINCE = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null" >
        COUNTRY = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.timeZone != null" >
        TIME_ZONE = #{record.timeZone,jdbcType=VARCHAR},
      </if>
      <if test="record.isRanslator != null" >
        IS_RANSLATOR = #{record.isRanslator,jdbcType=INTEGER},
      </if>
      <if test="record.isLsp != null" >
        IS_LSP = #{record.isLsp,jdbcType=INTEGER},
      </if>
      <if test="record.lspId != null" >
        LSP_ID = #{record.lspId,jdbcType=BIGINT},
      </if>
      <if test="record.introduction != null" >
        INTRODUCTION = #{record.introduction,jdbcType=VARCHAR},
      </if>
      <if test="record.registTime != null" >
        REGIST_TIME = #{record.registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifyTime != null" >
        LAST_MODIFY_TIME = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.occupation != null" >
        OCCUPATION = #{record.occupation,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        TITLE = #{record.title,jdbcType=INTEGER},
      </if>
      <if test="record.usersource != null" >
        USERSOURCE = #{record.usersource,jdbcType=VARCHAR},
      </if>
      <if test="record.thirduid != null" >
        THIRDUID = #{record.thirduid,jdbcType=VARCHAR},
      </if>
      <if test="record.personsign != null" >
        PERSONSIGN = #{record.personsign,jdbcType=VARCHAR},
      </if>
      <if test="record.isBusiness != null" >
        IS_BUSINESS = #{record.isBusiness,jdbcType=INTEGER},
      </if>
      <if test="record.custId != null" >
        CUST_ID = #{record.custId,jdbcType=VARCHAR},
      </if>
      <if test="record.emailValidateFlag != null" >
        EMAIL_VALIDATE_FLAG = #{record.emailValidateFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.vipLevel != null" >
        vip_level = #{record.vipLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.safetyLevel != null" >
        SAFETY_LEVEL = #{record.safetyLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.legalCertNum != null" >
        LEGAL_CERT_NUM = #{record.legalCertNum,jdbcType=VARCHAR},
      </if>
      <if test="record.interpreterLanguage != null" >
        interpreter_language = #{record.interpreterLanguage,jdbcType=VARCHAR},
      </if>
      <if test="record.translationType != null" >
        translation_type = #{record.translationType,jdbcType=VARCHAR},
      </if>
      <if test="record.referencePrice != null" >
        reference_price = #{record.referencePrice,jdbcType=VARCHAR},
      </if>
      <if test="record.lspRole != null" >
        LSP_ROLE = #{record.lspRole,jdbcType=VARCHAR},
      </if>
      <if test="record.isAdmin != null" >
        IS_ADMIN = #{record.isAdmin,jdbcType=INTEGER},
      </if>
      <if test="record.goodArea != null" >
        good_area = #{record.goodArea,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.goodUse != null" >
        good_use = #{record.goodUse,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_user
    set user_id = #{record.userId,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      lastname = #{record.lastname,jdbcType=VARCHAR},
      firstname = #{record.firstname,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      years_work = #{record.yearsWork,jdbcType=INTEGER},
      native_lang = #{record.nativeLang,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      MOBILE_PHONE = #{record.mobilePhone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      CITY = #{record.city,jdbcType=VARCHAR},
      CN_CITY = #{record.cnCity,jdbcType=VARCHAR},
      PROVINCE = #{record.province,jdbcType=VARCHAR},
      COUNTRY = #{record.country,jdbcType=VARCHAR},
      TIME_ZONE = #{record.timeZone,jdbcType=VARCHAR},
      IS_RANSLATOR = #{record.isRanslator,jdbcType=INTEGER},
      IS_LSP = #{record.isLsp,jdbcType=INTEGER},
      LSP_ID = #{record.lspId,jdbcType=BIGINT},
      INTRODUCTION = #{record.introduction,jdbcType=VARCHAR},
      REGIST_TIME = #{record.registTime,jdbcType=TIMESTAMP},
      LAST_MODIFY_TIME = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      OCCUPATION = #{record.occupation,jdbcType=INTEGER},
      TITLE = #{record.title,jdbcType=INTEGER},
      USERSOURCE = #{record.usersource,jdbcType=VARCHAR},
      THIRDUID = #{record.thirduid,jdbcType=VARCHAR},
      PERSONSIGN = #{record.personsign,jdbcType=VARCHAR},
      IS_BUSINESS = #{record.isBusiness,jdbcType=INTEGER},
      CUST_ID = #{record.custId,jdbcType=VARCHAR},
      EMAIL_VALIDATE_FLAG = #{record.emailValidateFlag,jdbcType=VARCHAR},
      vip_level = #{record.vipLevel,jdbcType=VARCHAR},
      SAFETY_LEVEL = #{record.safetyLevel,jdbcType=VARCHAR},
      LEGAL_CERT_NUM = #{record.legalCertNum,jdbcType=VARCHAR},
      interpreter_language = #{record.interpreterLanguage,jdbcType=VARCHAR},
      translation_type = #{record.translationType,jdbcType=VARCHAR},
      reference_price = #{record.referencePrice,jdbcType=VARCHAR},
      LSP_ROLE = #{record.lspRole,jdbcType=VARCHAR},
      IS_ADMIN = #{record.isAdmin,jdbcType=INTEGER},
      good_area = #{record.goodArea,jdbcType=LONGVARCHAR},
      good_use = #{record.goodUse,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_user
    set user_id = #{record.userId,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      lastname = #{record.lastname,jdbcType=VARCHAR},
      firstname = #{record.firstname,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      years_work = #{record.yearsWork,jdbcType=INTEGER},
      native_lang = #{record.nativeLang,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      MOBILE_PHONE = #{record.mobilePhone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      CITY = #{record.city,jdbcType=VARCHAR},
      CN_CITY = #{record.cnCity,jdbcType=VARCHAR},
      PROVINCE = #{record.province,jdbcType=VARCHAR},
      COUNTRY = #{record.country,jdbcType=VARCHAR},
      TIME_ZONE = #{record.timeZone,jdbcType=VARCHAR},
      IS_RANSLATOR = #{record.isRanslator,jdbcType=INTEGER},
      IS_LSP = #{record.isLsp,jdbcType=INTEGER},
      LSP_ID = #{record.lspId,jdbcType=BIGINT},
      INTRODUCTION = #{record.introduction,jdbcType=VARCHAR},
      REGIST_TIME = #{record.registTime,jdbcType=TIMESTAMP},
      LAST_MODIFY_TIME = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      OCCUPATION = #{record.occupation,jdbcType=INTEGER},
      TITLE = #{record.title,jdbcType=INTEGER},
      USERSOURCE = #{record.usersource,jdbcType=VARCHAR},
      THIRDUID = #{record.thirduid,jdbcType=VARCHAR},
      PERSONSIGN = #{record.personsign,jdbcType=VARCHAR},
      IS_BUSINESS = #{record.isBusiness,jdbcType=INTEGER},
      CUST_ID = #{record.custId,jdbcType=VARCHAR},
      EMAIL_VALIDATE_FLAG = #{record.emailValidateFlag,jdbcType=VARCHAR},
      vip_level = #{record.vipLevel,jdbcType=VARCHAR},
      SAFETY_LEVEL = #{record.safetyLevel,jdbcType=VARCHAR},
      LEGAL_CERT_NUM = #{record.legalCertNum,jdbcType=VARCHAR},
      interpreter_language = #{record.interpreterLanguage,jdbcType=VARCHAR},
      translation_type = #{record.translationType,jdbcType=VARCHAR},
      reference_price = #{record.referencePrice,jdbcType=VARCHAR},
      LSP_ROLE = #{record.lspRole,jdbcType=VARCHAR},
      IS_ADMIN = #{record.isAdmin,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>